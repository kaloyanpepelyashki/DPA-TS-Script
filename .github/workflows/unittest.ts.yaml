# name: DPA-Application CI

# on: [push]

# jobs:
#   # build:
#   #   runs-on: ubuntu-latest

#   #   strategy:
#   #     matrix:
#   #       node-version: [16.x, 18.x]

#   #   steps:
#   #     - uses: actions/checkout@v3
#   #     - name: Use Node.js ${{ matrix.node-version }}
#   #       uses: actions/setup-node@v3
#   #       with:
#   #         node-version: ${{ matrix.node-version }}
#   #         cache: "npm"
#   #     - run: npm ci
#   #     - name: Run Jest
#   #       run: npm test
#   #       env:
#   #         CI: true

#   deploy:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [16.x, 18.x]

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v3
#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: Install dependencies
#         run: npm install
#         working-directory: ./Server/WEEE-Calculator-Server/

#       - name: Compile TypeScript
#         run: tsc
#         working-directory: ./Server/WEEE-Calculator-Server/

#       - name: Login to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build Docker image
#         run: docker build -t weee-calculator-server:latest -f ./Server/WEEE-Calculator-Server/Dockerfile ./Server/WEEE-Calculator-Server/

#       - name: Push Docker image to DockerHub
#         run: |
#           docker tag weee-calculator-server:latest ${{ secrets.DOCKER_USERNAME }}/weee-calculator-server:latest
#           docker push ${{ secrets.DOCKER_USERNAME }}/weee-calculator-server:latest

#       - name: Deploy to Render
#         run: |
#           curl -X POST \
#             -H "Accept: application/json" \
#             -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
#             -H "Content-Type: application/json" \
#             -d '{"serviceId": "{{ secrets.RENDER_SERVICE_KEY }}", "clearCache": false}' \
#             https://api.render.com/v1/services/YOUR_RENDER_SERVICE_ID/deploys 

name: Deploy to Hetzner

on:
  push:
    branches:
      - production # Trigger deployment on the "production" branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Use Node.js 20

      - name: Install dependencies
        run: npm install
        working-directory: ./Server/WEEE-Calculator-Server/

      - name: Compile TypeScript
        run: npm run build
        working-directory: ./Server/WEEE-Calculator-Server/

      - name: List dist directory contents (debug step)
        run: |
          ls -al Server/WEEE-Calculator-Server/dist  # Verifies that the compiled files exist

      - name: Install sshpass (for password authentication)
        run: sudo apt-get install -y sshpass

      - name: Copy files to Hetzner server
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -r -o StrictHostKeyChecking=no Server/WEEE-Calculator-Server/* ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/srv/weee-calculator-server

      - name: SSH into Hetzner server and install dependencies
        run: |
          sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd /srv/weee-calculator-server
          npm install --production  # Install production dependencies only
          pm2 restart all || pm2 start main.js --name "weee-calculator-server"
          EOF

